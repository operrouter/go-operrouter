// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/operrouter.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DataSource operations
type DataSourceType int32

const (
	DataSourceType_DATA_SOURCE_TYPE_UNSPECIFIED DataSourceType = 0
	DataSourceType_DATA_SOURCE_TYPE_MYSQL       DataSourceType = 1
	DataSourceType_DATA_SOURCE_TYPE_POSTGRESQL  DataSourceType = 2
	DataSourceType_DATA_SOURCE_TYPE_REDIS       DataSourceType = 3
	DataSourceType_DATA_SOURCE_TYPE_KAFKA       DataSourceType = 4
	DataSourceType_DATA_SOURCE_TYPE_MONGODB     DataSourceType = 5
)

// Enum value maps for DataSourceType.
var (
	DataSourceType_name = map[int32]string{
		0: "DATA_SOURCE_TYPE_UNSPECIFIED",
		1: "DATA_SOURCE_TYPE_MYSQL",
		2: "DATA_SOURCE_TYPE_POSTGRESQL",
		3: "DATA_SOURCE_TYPE_REDIS",
		4: "DATA_SOURCE_TYPE_KAFKA",
		5: "DATA_SOURCE_TYPE_MONGODB",
	}
	DataSourceType_value = map[string]int32{
		"DATA_SOURCE_TYPE_UNSPECIFIED": 0,
		"DATA_SOURCE_TYPE_MYSQL":       1,
		"DATA_SOURCE_TYPE_POSTGRESQL":  2,
		"DATA_SOURCE_TYPE_REDIS":       3,
		"DATA_SOURCE_TYPE_KAFKA":       4,
		"DATA_SOURCE_TYPE_MONGODB":     5,
	}
)

func (x DataSourceType) Enum() *DataSourceType {
	p := new(DataSourceType)
	*p = x
	return p
}

func (x DataSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_operrouter_proto_enumTypes[0].Descriptor()
}

func (DataSourceType) Type() protoreflect.EnumType {
	return &file_proto_operrouter_proto_enumTypes[0]
}

func (x DataSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataSourceType.Descriptor instead.
func (DataSourceType) EnumDescriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{0}
}

// LLM operations
type LLMProvider int32

const (
	LLMProvider_LLM_PROVIDER_UNSPECIFIED LLMProvider = 0
	LLMProvider_LLM_PROVIDER_OPENAI      LLMProvider = 1
	LLMProvider_LLM_PROVIDER_OLLAMA      LLMProvider = 2
	LLMProvider_LLM_PROVIDER_ANTHROPIC   LLMProvider = 3
	LLMProvider_LLM_PROVIDER_LOCAL       LLMProvider = 4
)

// Enum value maps for LLMProvider.
var (
	LLMProvider_name = map[int32]string{
		0: "LLM_PROVIDER_UNSPECIFIED",
		1: "LLM_PROVIDER_OPENAI",
		2: "LLM_PROVIDER_OLLAMA",
		3: "LLM_PROVIDER_ANTHROPIC",
		4: "LLM_PROVIDER_LOCAL",
	}
	LLMProvider_value = map[string]int32{
		"LLM_PROVIDER_UNSPECIFIED": 0,
		"LLM_PROVIDER_OPENAI":      1,
		"LLM_PROVIDER_OLLAMA":      2,
		"LLM_PROVIDER_ANTHROPIC":   3,
		"LLM_PROVIDER_LOCAL":       4,
	}
)

func (x LLMProvider) Enum() *LLMProvider {
	p := new(LLMProvider)
	*p = x
	return p
}

func (x LLMProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LLMProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_operrouter_proto_enumTypes[1].Descriptor()
}

func (LLMProvider) Type() protoreflect.EnumType {
	return &file_proto_operrouter_proto_enumTypes[1]
}

func (x LLMProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LLMProvider.Descriptor instead.
func (LLMProvider) EnumDescriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{1}
}

type MessageRole int32

const (
	MessageRole_MESSAGE_ROLE_UNSPECIFIED MessageRole = 0
	MessageRole_MESSAGE_ROLE_SYSTEM      MessageRole = 1
	MessageRole_MESSAGE_ROLE_USER        MessageRole = 2
	MessageRole_MESSAGE_ROLE_ASSISTANT   MessageRole = 3
)

// Enum value maps for MessageRole.
var (
	MessageRole_name = map[int32]string{
		0: "MESSAGE_ROLE_UNSPECIFIED",
		1: "MESSAGE_ROLE_SYSTEM",
		2: "MESSAGE_ROLE_USER",
		3: "MESSAGE_ROLE_ASSISTANT",
	}
	MessageRole_value = map[string]int32{
		"MESSAGE_ROLE_UNSPECIFIED": 0,
		"MESSAGE_ROLE_SYSTEM":      1,
		"MESSAGE_ROLE_USER":        2,
		"MESSAGE_ROLE_ASSISTANT":   3,
	}
)

func (x MessageRole) Enum() *MessageRole {
	p := new(MessageRole)
	*p = x
	return p
}

func (x MessageRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_operrouter_proto_enumTypes[2].Descriptor()
}

func (MessageRole) Type() protoreflect.EnumType {
	return &file_proto_operrouter_proto_enumTypes[2]
}

func (x MessageRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageRole.Descriptor instead.
func (MessageRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{2}
}

// Common types
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version     string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Metadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Ping service
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{1}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{2}
}

func (x *PingResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PingResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Config validation
type ValidateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TomlContent string `protobuf:"bytes,1,opt,name=toml_content,json=tomlContent,proto3" json:"toml_content,omitempty"`
}

func (x *ValidateConfigRequest) Reset() {
	*x = ValidateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigRequest) ProtoMessage() {}

func (x *ValidateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigRequest.ProtoReflect.Descriptor instead.
func (*ValidateConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{3}
}

func (x *ValidateConfigRequest) GetTomlContent() string {
	if x != nil {
		return x.TomlContent
	}
	return ""
}

type ValidateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid  bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Errors []string `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ValidateConfigResponse) Reset() {
	*x = ValidateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigResponse) ProtoMessage() {}

func (x *ValidateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigResponse.ProtoReflect.Descriptor instead.
func (*ValidateConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateConfigResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateConfigResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Config loading
type LoadConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigPath string `protobuf:"bytes,1,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
}

func (x *LoadConfigRequest) Reset() {
	*x = LoadConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadConfigRequest) ProtoMessage() {}

func (x *LoadConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadConfigRequest.ProtoReflect.Descriptor instead.
func (*LoadConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{5}
}

func (x *LoadConfigRequest) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

type LoadConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	OperatorName string `protobuf:"bytes,2,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
	Error        string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LoadConfigResponse) Reset() {
	*x = LoadConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadConfigResponse) ProtoMessage() {}

func (x *LoadConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadConfigResponse.ProtoReflect.Descriptor instead.
func (*LoadConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{6}
}

func (x *LoadConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoadConfigResponse) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *LoadConfigResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Metadata retrieval
type GetMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMetadataRequest) Reset() {
	*x = GetMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataRequest) ProtoMessage() {}

func (x *GetMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{7}
}

type GetMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GetMetadataResponse) Reset() {
	*x = GetMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataResponse) ProtoMessage() {}

func (x *GetMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetMetadataResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{8}
}

func (x *GetMetadataResponse) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DataSourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           DataSourceType    `protobuf:"varint,1,opt,name=type,proto3,enum=operrouter.v1.DataSourceType" json:"type,omitempty"`
	Url            string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	MaxConnections *uint32           `protobuf:"varint,3,opt,name=max_connections,json=maxConnections,proto3,oneof" json:"max_connections,omitempty"`
	TimeoutSeconds *uint64           `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds,proto3,oneof" json:"timeout_seconds,omitempty"`
	Extra          map[string]string `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DataSourceConfig) Reset() {
	*x = DataSourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceConfig) ProtoMessage() {}

func (x *DataSourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceConfig.ProtoReflect.Descriptor instead.
func (*DataSourceConfig) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{9}
}

func (x *DataSourceConfig) GetType() DataSourceType {
	if x != nil {
		return x.Type
	}
	return DataSourceType_DATA_SOURCE_TYPE_UNSPECIFIED
}

func (x *DataSourceConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DataSourceConfig) GetMaxConnections() uint32 {
	if x != nil && x.MaxConnections != nil {
		return *x.MaxConnections
	}
	return 0
}

func (x *DataSourceConfig) GetTimeoutSeconds() uint64 {
	if x != nil && x.TimeoutSeconds != nil {
		return *x.TimeoutSeconds
	}
	return 0
}

func (x *DataSourceConfig) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Value_NullValue
	//	*Value_BoolValue
	//	*Value_IntValue
	//	*Value_FloatValue
	//	*Value_StringValue
	//	*Value_BytesValue
	//	*Value_ArrayValue
	//	*Value_ObjectValue
	Value isValue_Value `protobuf_oneof:"value"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{10}
}

func (m *Value) GetValue() isValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Value) GetNullValue() bool {
	if x, ok := x.GetValue().(*Value_NullValue); ok {
		return x.NullValue
	}
	return false
}

func (x *Value) GetBoolValue() bool {
	if x, ok := x.GetValue().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *Value) GetIntValue() int64 {
	if x, ok := x.GetValue().(*Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *Value) GetFloatValue() float64 {
	if x, ok := x.GetValue().(*Value_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *Value) GetStringValue() string {
	if x, ok := x.GetValue().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Value) GetBytesValue() []byte {
	if x, ok := x.GetValue().(*Value_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (x *Value) GetArrayValue() *ValueArray {
	if x, ok := x.GetValue().(*Value_ArrayValue); ok {
		return x.ArrayValue
	}
	return nil
}

func (x *Value) GetObjectValue() *ValueObject {
	if x, ok := x.GetValue().(*Value_ObjectValue); ok {
		return x.ObjectValue
	}
	return nil
}

type isValue_Value interface {
	isValue_Value()
}

type Value_NullValue struct {
	NullValue bool `protobuf:"varint,1,opt,name=null_value,json=nullValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_IntValue struct {
	IntValue int64 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Value_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,4,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,6,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type Value_ArrayValue struct {
	ArrayValue *ValueArray `protobuf:"bytes,7,opt,name=array_value,json=arrayValue,proto3,oneof"`
}

type Value_ObjectValue struct {
	ObjectValue *ValueObject `protobuf:"bytes,8,opt,name=object_value,json=objectValue,proto3,oneof"`
}

func (*Value_NullValue) isValue_Value() {}

func (*Value_BoolValue) isValue_Value() {}

func (*Value_IntValue) isValue_Value() {}

func (*Value_FloatValue) isValue_Value() {}

func (*Value_StringValue) isValue_Value() {}

func (*Value_BytesValue) isValue_Value() {}

func (*Value_ArrayValue) isValue_Value() {}

func (*Value_ObjectValue) isValue_Value() {}

type ValueArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ValueArray) Reset() {
	*x = ValueArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueArray) ProtoMessage() {}

func (x *ValueArray) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueArray.ProtoReflect.Descriptor instead.
func (*ValueArray) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{11}
}

func (x *ValueArray) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type ValueObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]*Value `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ValueObject) Reset() {
	*x = ValueObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueObject) ProtoMessage() {}

func (x *ValueObject) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueObject.ProtoReflect.Descriptor instead.
func (*ValueObject) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{12}
}

func (x *ValueObject) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns map[string]*Value `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Row) Reset() {
	*x = Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{13}
}

func (x *Row) GetColumns() map[string]*Value {
	if x != nil {
		return x.Columns
	}
	return nil
}

type CreateDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config *DataSourceConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *CreateDataSourceRequest) Reset() {
	*x = CreateDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataSourceRequest) ProtoMessage() {}

func (x *CreateDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataSourceRequest.ProtoReflect.Descriptor instead.
func (*CreateDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{14}
}

func (x *CreateDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDataSourceRequest) GetConfig() *DataSourceConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateDataSourceResponse) Reset() {
	*x = CreateDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataSourceResponse) ProtoMessage() {}

func (x *CreateDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataSourceResponse.ProtoReflect.Descriptor instead.
func (*CreateDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{15}
}

func (x *CreateDataSourceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateDataSourceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type QueryDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *QueryDataSourceRequest) Reset() {
	*x = QueryDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataSourceRequest) ProtoMessage() {}

func (x *QueryDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataSourceRequest.ProtoReflect.Descriptor instead.
func (*QueryDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{16}
}

func (x *QueryDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryDataSourceRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type QueryDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Rows    []*Row `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	Error   string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *QueryDataSourceResponse) Reset() {
	*x = QueryDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataSourceResponse) ProtoMessage() {}

func (x *QueryDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataSourceResponse.ProtoReflect.Descriptor instead.
func (*QueryDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{17}
}

func (x *QueryDataSourceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryDataSourceResponse) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *QueryDataSourceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ExecuteDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ExecuteDataSourceRequest) Reset() {
	*x = ExecuteDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteDataSourceRequest) ProtoMessage() {}

func (x *ExecuteDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ExecuteDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{18}
}

func (x *ExecuteDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExecuteDataSourceRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ExecuteDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	AffectedRows uint64 `protobuf:"varint,2,opt,name=affected_rows,json=affectedRows,proto3" json:"affected_rows,omitempty"`
	Error        string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ExecuteDataSourceResponse) Reset() {
	*x = ExecuteDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteDataSourceResponse) ProtoMessage() {}

func (x *ExecuteDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ExecuteDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{19}
}

func (x *ExecuteDataSourceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExecuteDataSourceResponse) GetAffectedRows() uint64 {
	if x != nil {
		return x.AffectedRows
	}
	return 0
}

func (x *ExecuteDataSourceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type InsertDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Data  *Row   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InsertDataSourceRequest) Reset() {
	*x = InsertDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertDataSourceRequest) ProtoMessage() {}

func (x *InsertDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertDataSourceRequest.ProtoReflect.Descriptor instead.
func (*InsertDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{20}
}

func (x *InsertDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InsertDataSourceRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *InsertDataSourceRequest) GetData() *Row {
	if x != nil {
		return x.Data
	}
	return nil
}

type InsertDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	InsertedRows uint64 `protobuf:"varint,2,opt,name=inserted_rows,json=insertedRows,proto3" json:"inserted_rows,omitempty"`
	Error        string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *InsertDataSourceResponse) Reset() {
	*x = InsertDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertDataSourceResponse) ProtoMessage() {}

func (x *InsertDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertDataSourceResponse.ProtoReflect.Descriptor instead.
func (*InsertDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{21}
}

func (x *InsertDataSourceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InsertDataSourceResponse) GetInsertedRows() uint64 {
	if x != nil {
		return x.InsertedRows
	}
	return 0
}

func (x *InsertDataSourceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type PingDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PingDataSourceRequest) Reset() {
	*x = PingDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingDataSourceRequest) ProtoMessage() {}

func (x *PingDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingDataSourceRequest.ProtoReflect.Descriptor instead.
func (*PingDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{22}
}

func (x *PingDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PingDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy bool   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PingDataSourceResponse) Reset() {
	*x = PingDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingDataSourceResponse) ProtoMessage() {}

func (x *PingDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingDataSourceResponse.ProtoReflect.Descriptor instead.
func (*PingDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{23}
}

func (x *PingDataSourceResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *PingDataSourceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CloseDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CloseDataSourceRequest) Reset() {
	*x = CloseDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDataSourceRequest) ProtoMessage() {}

func (x *CloseDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDataSourceRequest.ProtoReflect.Descriptor instead.
func (*CloseDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{24}
}

func (x *CloseDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CloseDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CloseDataSourceResponse) Reset() {
	*x = CloseDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDataSourceResponse) ProtoMessage() {}

func (x *CloseDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDataSourceResponse.ProtoReflect.Descriptor instead.
func (*CloseDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{25}
}

func (x *CloseDataSourceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CloseDataSourceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LLMConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider       LLMProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=operrouter.v1.LLMProvider" json:"provider,omitempty"`
	ApiKey         *string     `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3,oneof" json:"api_key,omitempty"`
	ApiBase        *string     `protobuf:"bytes,3,opt,name=api_base,json=apiBase,proto3,oneof" json:"api_base,omitempty"`
	Model          string      `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Temperature    *float32    `protobuf:"fixed32,5,opt,name=temperature,proto3,oneof" json:"temperature,omitempty"`
	MaxTokens      *uint32     `protobuf:"varint,6,opt,name=max_tokens,json=maxTokens,proto3,oneof" json:"max_tokens,omitempty"`
	TimeoutSeconds *uint64     `protobuf:"varint,7,opt,name=timeout_seconds,json=timeoutSeconds,proto3,oneof" json:"timeout_seconds,omitempty"`
}

func (x *LLMConfig) Reset() {
	*x = LLMConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLMConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMConfig) ProtoMessage() {}

func (x *LLMConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMConfig.ProtoReflect.Descriptor instead.
func (*LLMConfig) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{26}
}

func (x *LLMConfig) GetProvider() LLMProvider {
	if x != nil {
		return x.Provider
	}
	return LLMProvider_LLM_PROVIDER_UNSPECIFIED
}

func (x *LLMConfig) GetApiKey() string {
	if x != nil && x.ApiKey != nil {
		return *x.ApiKey
	}
	return ""
}

func (x *LLMConfig) GetApiBase() string {
	if x != nil && x.ApiBase != nil {
		return *x.ApiBase
	}
	return ""
}

func (x *LLMConfig) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *LLMConfig) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

func (x *LLMConfig) GetMaxTokens() uint32 {
	if x != nil && x.MaxTokens != nil {
		return *x.MaxTokens
	}
	return 0
}

func (x *LLMConfig) GetTimeoutSeconds() uint64 {
	if x != nil && x.TimeoutSeconds != nil {
		return *x.TimeoutSeconds
	}
	return 0
}

type LLMMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    MessageRole `protobuf:"varint,1,opt,name=role,proto3,enum=operrouter.v1.MessageRole" json:"role,omitempty"`
	Content string      `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *LLMMessage) Reset() {
	*x = LLMMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLMMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMMessage) ProtoMessage() {}

func (x *LLMMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMMessage.ProtoReflect.Descriptor instead.
func (*LLMMessage) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{27}
}

func (x *LLMMessage) GetRole() MessageRole {
	if x != nil {
		return x.Role
	}
	return MessageRole_MESSAGE_ROLE_UNSPECIFIED
}

func (x *LLMMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateLLMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config *LLMConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *CreateLLMRequest) Reset() {
	*x = CreateLLMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLLMRequest) ProtoMessage() {}

func (x *CreateLLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLLMRequest.ProtoReflect.Descriptor instead.
func (*CreateLLMRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{28}
}

func (x *CreateLLMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLLMRequest) GetConfig() *LLMConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateLLMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateLLMResponse) Reset() {
	*x = CreateLLMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLLMResponse) ProtoMessage() {}

func (x *CreateLLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLLMResponse.ProtoReflect.Descriptor instead.
func (*CreateLLMResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{29}
}

func (x *CreateLLMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateLLMResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GenerateLLMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Prompt string `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
}

func (x *GenerateLLMRequest) Reset() {
	*x = GenerateLLMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateLLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLLMRequest) ProtoMessage() {}

func (x *GenerateLLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLLMRequest.ProtoReflect.Descriptor instead.
func (*GenerateLLMRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{30}
}

func (x *GenerateLLMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenerateLLMRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

type GenerateLLMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Text         string  `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	TokensUsed   *uint32 `protobuf:"varint,3,opt,name=tokens_used,json=tokensUsed,proto3,oneof" json:"tokens_used,omitempty"`
	FinishReason *string `protobuf:"bytes,4,opt,name=finish_reason,json=finishReason,proto3,oneof" json:"finish_reason,omitempty"`
	Model        string  `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Error        string  `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GenerateLLMResponse) Reset() {
	*x = GenerateLLMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateLLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLLMResponse) ProtoMessage() {}

func (x *GenerateLLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLLMResponse.ProtoReflect.Descriptor instead.
func (*GenerateLLMResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{31}
}

func (x *GenerateLLMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GenerateLLMResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GenerateLLMResponse) GetTokensUsed() uint32 {
	if x != nil && x.TokensUsed != nil {
		return *x.TokensUsed
	}
	return 0
}

func (x *GenerateLLMResponse) GetFinishReason() string {
	if x != nil && x.FinishReason != nil {
		return *x.FinishReason
	}
	return ""
}

func (x *GenerateLLMResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GenerateLLMResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ChatLLMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Messages []*LLMMessage `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ChatLLMRequest) Reset() {
	*x = ChatLLMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatLLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatLLMRequest) ProtoMessage() {}

func (x *ChatLLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatLLMRequest.ProtoReflect.Descriptor instead.
func (*ChatLLMRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{32}
}

func (x *ChatLLMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatLLMRequest) GetMessages() []*LLMMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ChatLLMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Text         string  `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	TokensUsed   *uint32 `protobuf:"varint,3,opt,name=tokens_used,json=tokensUsed,proto3,oneof" json:"tokens_used,omitempty"`
	FinishReason *string `protobuf:"bytes,4,opt,name=finish_reason,json=finishReason,proto3,oneof" json:"finish_reason,omitempty"`
	Model        string  `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Error        string  `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ChatLLMResponse) Reset() {
	*x = ChatLLMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatLLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatLLMResponse) ProtoMessage() {}

func (x *ChatLLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatLLMResponse.ProtoReflect.Descriptor instead.
func (*ChatLLMResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{33}
}

func (x *ChatLLMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChatLLMResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatLLMResponse) GetTokensUsed() uint32 {
	if x != nil && x.TokensUsed != nil {
		return *x.TokensUsed
	}
	return 0
}

func (x *ChatLLMResponse) GetFinishReason() string {
	if x != nil && x.FinishReason != nil {
		return *x.FinishReason
	}
	return ""
}

func (x *ChatLLMResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatLLMResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type EmbeddingLLMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *EmbeddingLLMRequest) Reset() {
	*x = EmbeddingLLMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingLLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingLLMRequest) ProtoMessage() {}

func (x *EmbeddingLLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingLLMRequest.ProtoReflect.Descriptor instead.
func (*EmbeddingLLMRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{34}
}

func (x *EmbeddingLLMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmbeddingLLMRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type EmbeddingLLMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Embedding  []float32 `protobuf:"fixed32,2,rep,packed,name=embedding,proto3" json:"embedding,omitempty"`
	Model      string    `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	TokensUsed *uint32   `protobuf:"varint,4,opt,name=tokens_used,json=tokensUsed,proto3,oneof" json:"tokens_used,omitempty"`
	Error      string    `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EmbeddingLLMResponse) Reset() {
	*x = EmbeddingLLMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingLLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingLLMResponse) ProtoMessage() {}

func (x *EmbeddingLLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingLLMResponse.ProtoReflect.Descriptor instead.
func (*EmbeddingLLMResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{35}
}

func (x *EmbeddingLLMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EmbeddingLLMResponse) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *EmbeddingLLMResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *EmbeddingLLMResponse) GetTokensUsed() uint32 {
	if x != nil && x.TokensUsed != nil {
		return *x.TokensUsed
	}
	return 0
}

func (x *EmbeddingLLMResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StreamLLMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Prompt string `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
}

func (x *StreamLLMRequest) Reset() {
	*x = StreamLLMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamLLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLLMRequest) ProtoMessage() {}

func (x *StreamLLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLLMRequest.ProtoReflect.Descriptor instead.
func (*StreamLLMRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{36}
}

func (x *StreamLLMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamLLMRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

type StreamLLMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Chunk   string `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Done    bool   `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	Error   string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StreamLLMResponse) Reset() {
	*x = StreamLLMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamLLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLLMResponse) ProtoMessage() {}

func (x *StreamLLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLLMResponse.ProtoReflect.Descriptor instead.
func (*StreamLLMResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{37}
}

func (x *StreamLLMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StreamLLMResponse) GetChunk() string {
	if x != nil {
		return x.Chunk
	}
	return ""
}

func (x *StreamLLMResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *StreamLLMResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type PingLLMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PingLLMRequest) Reset() {
	*x = PingLLMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingLLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingLLMRequest) ProtoMessage() {}

func (x *PingLLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingLLMRequest.ProtoReflect.Descriptor instead.
func (*PingLLMRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{38}
}

func (x *PingLLMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PingLLMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy bool   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PingLLMResponse) Reset() {
	*x = PingLLMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingLLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingLLMResponse) ProtoMessage() {}

func (x *PingLLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingLLMResponse.ProtoReflect.Descriptor instead.
func (*PingLLMResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{39}
}

func (x *PingLLMResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *PingLLMResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CloseLLMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CloseLLMRequest) Reset() {
	*x = CloseLLMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseLLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseLLMRequest) ProtoMessage() {}

func (x *CloseLLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseLLMRequest.ProtoReflect.Descriptor instead.
func (*CloseLLMRequest) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{40}
}

func (x *CloseLLMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CloseLLMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CloseLLMResponse) Reset() {
	*x = CloseLLMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_operrouter_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseLLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseLLMResponse) ProtoMessage() {}

func (x *CloseLLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_operrouter_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseLLMResponse.ProtoReflect.Descriptor instead.
func (*CloseLLMResponse) Descriptor() ([]byte, []int) {
	return file_proto_operrouter_proto_rawDescGZIP(), []int{41}
}

func (x *CloseLLMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CloseLLMResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_operrouter_proto protoreflect.FileDescriptor

var file_proto_operrouter_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x5a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x40, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x6f, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x46, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x11, 0x4c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x74, 0x68, 0x22, 0x69,
	0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd7, 0x02, 0x0a, 0x10,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0e,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xdb, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1f, 0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x9e, 0x01, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x3e, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a,
	0x4f, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x92, 0x01, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x72,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x77, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x1a, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x66, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4a, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x42, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x71, 0x0a,
	0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x44, 0x0a, 0x18, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x70, 0x0a, 0x19, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6b, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x70,
	0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x77, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6f, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2b, 0x0a, 0x15, 0x50, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x50, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2c, 0x0a,
	0x16, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x17, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xdc, 0x02, 0x0a, 0x09, 0x4c, 0x4c, 0x4d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x07,
	0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x70,
	0x69, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07,
	0x61, 0x70, 0x69, 0x42, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x25, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x04, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x0a, 0x4c, 0x4c, 0x4d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x40, 0x0a, 0x12,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0xe1,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4c, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22,
	0xdd, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x3d, 0x0a, 0x13, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xb0,
	0x01, 0x0a, 0x14, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x4c, 0x4d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x22, 0x6d, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x4c, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x24, 0x0a, 0x0e, 0x50, 0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x0f, 0x50, 0x69, 0x6e, 0x67, 0x4c, 0x4c,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x25, 0x0a, 0x0f, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x42, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2a, 0xc5, 0x01, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52,
	0x45, 0x53, 0x51, 0x4c, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x53,
	0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4b, 0x41, 0x46, 0x4b, 0x41, 0x10, 0x04, 0x12, 0x1c,
	0x0a, 0x18, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x47, 0x4f, 0x44, 0x42, 0x10, 0x05, 0x2a, 0x91, 0x01, 0x0a,
	0x0b, 0x4c, 0x4c, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x18,
	0x4c, 0x4c, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x4c,
	0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x41,
	0x49, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x4c, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x44, 0x45, 0x52, 0x5f, 0x4f, 0x4c, 0x4c, 0x41, 0x4d, 0x41, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x4c, 0x4c, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x4e, 0x54,
	0x48, 0x52, 0x4f, 0x50, 0x49, 0x43, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x4c, 0x4d, 0x5f,
	0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x04,
	0x2a, 0x77, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x18, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x53,
	0x53, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x10, 0x03, 0x32, 0xdc, 0x0b, 0x0a, 0x0a, 0x4f, 0x70,
	0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6f,
	0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x6f, 0x70,
	0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x4c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x72,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x63, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f,
	0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x50, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x4c, 0x4d, 0x12, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4c, 0x4c, 0x4d, 0x12, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x4c,
	0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07,
	0x43, 0x68, 0x61, 0x74, 0x4c, 0x4c, 0x4d, 0x12, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x4c, 0x4d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x4c, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x4c, 0x4d, 0x12, 0x1f, 0x2e, 0x6f,
	0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x48, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x12, 0x1d, 0x2e, 0x6f,
	0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x70,
	0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x4c, 0x4c, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x4c, 0x4d, 0x12, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x4c, 0x4d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x4c, 0x4d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xa8, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70,
	0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x2d, 0x6f, 0x70, 0x65, 0x72,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0xa2, 0x02, 0x03, 0x4f, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x4f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_operrouter_proto_rawDescOnce sync.Once
	file_proto_operrouter_proto_rawDescData = file_proto_operrouter_proto_rawDesc
)

func file_proto_operrouter_proto_rawDescGZIP() []byte {
	file_proto_operrouter_proto_rawDescOnce.Do(func() {
		file_proto_operrouter_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_operrouter_proto_rawDescData)
	})
	return file_proto_operrouter_proto_rawDescData
}

var file_proto_operrouter_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_operrouter_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_proto_operrouter_proto_goTypes = []any{
	(DataSourceType)(0),               // 0: operrouter.v1.DataSourceType
	(LLMProvider)(0),                  // 1: operrouter.v1.LLMProvider
	(MessageRole)(0),                  // 2: operrouter.v1.MessageRole
	(*Metadata)(nil),                  // 3: operrouter.v1.Metadata
	(*PingRequest)(nil),               // 4: operrouter.v1.PingRequest
	(*PingResponse)(nil),              // 5: operrouter.v1.PingResponse
	(*ValidateConfigRequest)(nil),     // 6: operrouter.v1.ValidateConfigRequest
	(*ValidateConfigResponse)(nil),    // 7: operrouter.v1.ValidateConfigResponse
	(*LoadConfigRequest)(nil),         // 8: operrouter.v1.LoadConfigRequest
	(*LoadConfigResponse)(nil),        // 9: operrouter.v1.LoadConfigResponse
	(*GetMetadataRequest)(nil),        // 10: operrouter.v1.GetMetadataRequest
	(*GetMetadataResponse)(nil),       // 11: operrouter.v1.GetMetadataResponse
	(*DataSourceConfig)(nil),          // 12: operrouter.v1.DataSourceConfig
	(*Value)(nil),                     // 13: operrouter.v1.Value
	(*ValueArray)(nil),                // 14: operrouter.v1.ValueArray
	(*ValueObject)(nil),               // 15: operrouter.v1.ValueObject
	(*Row)(nil),                       // 16: operrouter.v1.Row
	(*CreateDataSourceRequest)(nil),   // 17: operrouter.v1.CreateDataSourceRequest
	(*CreateDataSourceResponse)(nil),  // 18: operrouter.v1.CreateDataSourceResponse
	(*QueryDataSourceRequest)(nil),    // 19: operrouter.v1.QueryDataSourceRequest
	(*QueryDataSourceResponse)(nil),   // 20: operrouter.v1.QueryDataSourceResponse
	(*ExecuteDataSourceRequest)(nil),  // 21: operrouter.v1.ExecuteDataSourceRequest
	(*ExecuteDataSourceResponse)(nil), // 22: operrouter.v1.ExecuteDataSourceResponse
	(*InsertDataSourceRequest)(nil),   // 23: operrouter.v1.InsertDataSourceRequest
	(*InsertDataSourceResponse)(nil),  // 24: operrouter.v1.InsertDataSourceResponse
	(*PingDataSourceRequest)(nil),     // 25: operrouter.v1.PingDataSourceRequest
	(*PingDataSourceResponse)(nil),    // 26: operrouter.v1.PingDataSourceResponse
	(*CloseDataSourceRequest)(nil),    // 27: operrouter.v1.CloseDataSourceRequest
	(*CloseDataSourceResponse)(nil),   // 28: operrouter.v1.CloseDataSourceResponse
	(*LLMConfig)(nil),                 // 29: operrouter.v1.LLMConfig
	(*LLMMessage)(nil),                // 30: operrouter.v1.LLMMessage
	(*CreateLLMRequest)(nil),          // 31: operrouter.v1.CreateLLMRequest
	(*CreateLLMResponse)(nil),         // 32: operrouter.v1.CreateLLMResponse
	(*GenerateLLMRequest)(nil),        // 33: operrouter.v1.GenerateLLMRequest
	(*GenerateLLMResponse)(nil),       // 34: operrouter.v1.GenerateLLMResponse
	(*ChatLLMRequest)(nil),            // 35: operrouter.v1.ChatLLMRequest
	(*ChatLLMResponse)(nil),           // 36: operrouter.v1.ChatLLMResponse
	(*EmbeddingLLMRequest)(nil),       // 37: operrouter.v1.EmbeddingLLMRequest
	(*EmbeddingLLMResponse)(nil),      // 38: operrouter.v1.EmbeddingLLMResponse
	(*StreamLLMRequest)(nil),          // 39: operrouter.v1.StreamLLMRequest
	(*StreamLLMResponse)(nil),         // 40: operrouter.v1.StreamLLMResponse
	(*PingLLMRequest)(nil),            // 41: operrouter.v1.PingLLMRequest
	(*PingLLMResponse)(nil),           // 42: operrouter.v1.PingLLMResponse
	(*CloseLLMRequest)(nil),           // 43: operrouter.v1.CloseLLMRequest
	(*CloseLLMResponse)(nil),          // 44: operrouter.v1.CloseLLMResponse
	nil,                               // 45: operrouter.v1.DataSourceConfig.ExtraEntry
	nil,                               // 46: operrouter.v1.ValueObject.FieldsEntry
	nil,                               // 47: operrouter.v1.Row.ColumnsEntry
}
var file_proto_operrouter_proto_depIdxs = []int32{
	3,  // 0: operrouter.v1.GetMetadataResponse.metadata:type_name -> operrouter.v1.Metadata
	0,  // 1: operrouter.v1.DataSourceConfig.type:type_name -> operrouter.v1.DataSourceType
	45, // 2: operrouter.v1.DataSourceConfig.extra:type_name -> operrouter.v1.DataSourceConfig.ExtraEntry
	14, // 3: operrouter.v1.Value.array_value:type_name -> operrouter.v1.ValueArray
	15, // 4: operrouter.v1.Value.object_value:type_name -> operrouter.v1.ValueObject
	13, // 5: operrouter.v1.ValueArray.values:type_name -> operrouter.v1.Value
	46, // 6: operrouter.v1.ValueObject.fields:type_name -> operrouter.v1.ValueObject.FieldsEntry
	47, // 7: operrouter.v1.Row.columns:type_name -> operrouter.v1.Row.ColumnsEntry
	12, // 8: operrouter.v1.CreateDataSourceRequest.config:type_name -> operrouter.v1.DataSourceConfig
	16, // 9: operrouter.v1.QueryDataSourceResponse.rows:type_name -> operrouter.v1.Row
	16, // 10: operrouter.v1.InsertDataSourceRequest.data:type_name -> operrouter.v1.Row
	1,  // 11: operrouter.v1.LLMConfig.provider:type_name -> operrouter.v1.LLMProvider
	2,  // 12: operrouter.v1.LLMMessage.role:type_name -> operrouter.v1.MessageRole
	29, // 13: operrouter.v1.CreateLLMRequest.config:type_name -> operrouter.v1.LLMConfig
	30, // 14: operrouter.v1.ChatLLMRequest.messages:type_name -> operrouter.v1.LLMMessage
	13, // 15: operrouter.v1.ValueObject.FieldsEntry.value:type_name -> operrouter.v1.Value
	13, // 16: operrouter.v1.Row.ColumnsEntry.value:type_name -> operrouter.v1.Value
	4,  // 17: operrouter.v1.OperRouter.Ping:input_type -> operrouter.v1.PingRequest
	6,  // 18: operrouter.v1.OperRouter.ValidateConfig:input_type -> operrouter.v1.ValidateConfigRequest
	8,  // 19: operrouter.v1.OperRouter.LoadConfig:input_type -> operrouter.v1.LoadConfigRequest
	10, // 20: operrouter.v1.OperRouter.GetMetadata:input_type -> operrouter.v1.GetMetadataRequest
	17, // 21: operrouter.v1.OperRouter.CreateDataSource:input_type -> operrouter.v1.CreateDataSourceRequest
	19, // 22: operrouter.v1.OperRouter.QueryDataSource:input_type -> operrouter.v1.QueryDataSourceRequest
	21, // 23: operrouter.v1.OperRouter.ExecuteDataSource:input_type -> operrouter.v1.ExecuteDataSourceRequest
	23, // 24: operrouter.v1.OperRouter.InsertDataSource:input_type -> operrouter.v1.InsertDataSourceRequest
	25, // 25: operrouter.v1.OperRouter.PingDataSource:input_type -> operrouter.v1.PingDataSourceRequest
	27, // 26: operrouter.v1.OperRouter.CloseDataSource:input_type -> operrouter.v1.CloseDataSourceRequest
	31, // 27: operrouter.v1.OperRouter.CreateLLM:input_type -> operrouter.v1.CreateLLMRequest
	33, // 28: operrouter.v1.OperRouter.GenerateLLM:input_type -> operrouter.v1.GenerateLLMRequest
	35, // 29: operrouter.v1.OperRouter.ChatLLM:input_type -> operrouter.v1.ChatLLMRequest
	37, // 30: operrouter.v1.OperRouter.EmbeddingLLM:input_type -> operrouter.v1.EmbeddingLLMRequest
	39, // 31: operrouter.v1.OperRouter.StreamLLM:input_type -> operrouter.v1.StreamLLMRequest
	41, // 32: operrouter.v1.OperRouter.PingLLM:input_type -> operrouter.v1.PingLLMRequest
	43, // 33: operrouter.v1.OperRouter.CloseLLM:input_type -> operrouter.v1.CloseLLMRequest
	5,  // 34: operrouter.v1.OperRouter.Ping:output_type -> operrouter.v1.PingResponse
	7,  // 35: operrouter.v1.OperRouter.ValidateConfig:output_type -> operrouter.v1.ValidateConfigResponse
	9,  // 36: operrouter.v1.OperRouter.LoadConfig:output_type -> operrouter.v1.LoadConfigResponse
	11, // 37: operrouter.v1.OperRouter.GetMetadata:output_type -> operrouter.v1.GetMetadataResponse
	18, // 38: operrouter.v1.OperRouter.CreateDataSource:output_type -> operrouter.v1.CreateDataSourceResponse
	20, // 39: operrouter.v1.OperRouter.QueryDataSource:output_type -> operrouter.v1.QueryDataSourceResponse
	22, // 40: operrouter.v1.OperRouter.ExecuteDataSource:output_type -> operrouter.v1.ExecuteDataSourceResponse
	24, // 41: operrouter.v1.OperRouter.InsertDataSource:output_type -> operrouter.v1.InsertDataSourceResponse
	26, // 42: operrouter.v1.OperRouter.PingDataSource:output_type -> operrouter.v1.PingDataSourceResponse
	28, // 43: operrouter.v1.OperRouter.CloseDataSource:output_type -> operrouter.v1.CloseDataSourceResponse
	32, // 44: operrouter.v1.OperRouter.CreateLLM:output_type -> operrouter.v1.CreateLLMResponse
	34, // 45: operrouter.v1.OperRouter.GenerateLLM:output_type -> operrouter.v1.GenerateLLMResponse
	36, // 46: operrouter.v1.OperRouter.ChatLLM:output_type -> operrouter.v1.ChatLLMResponse
	38, // 47: operrouter.v1.OperRouter.EmbeddingLLM:output_type -> operrouter.v1.EmbeddingLLMResponse
	40, // 48: operrouter.v1.OperRouter.StreamLLM:output_type -> operrouter.v1.StreamLLMResponse
	42, // 49: operrouter.v1.OperRouter.PingLLM:output_type -> operrouter.v1.PingLLMResponse
	44, // 50: operrouter.v1.OperRouter.CloseLLM:output_type -> operrouter.v1.CloseLLMResponse
	34, // [34:51] is the sub-list for method output_type
	17, // [17:34] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_operrouter_proto_init() }
func file_proto_operrouter_proto_init() {
	if File_proto_operrouter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_operrouter_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ValidateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ValidateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LoadConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*LoadConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DataSourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ValueArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ValueObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*QueryDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ExecuteDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ExecuteDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*InsertDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*InsertDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PingDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*PingDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CloseDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CloseDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*LLMConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*LLMMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CreateLLMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CreateLLMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateLLMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateLLMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ChatLLMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ChatLLMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*EmbeddingLLMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*EmbeddingLLMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*StreamLLMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*StreamLLMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*PingLLMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*PingLLMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CloseLLMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_operrouter_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CloseLLMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_operrouter_proto_msgTypes[9].OneofWrappers = []any{}
	file_proto_operrouter_proto_msgTypes[10].OneofWrappers = []any{
		(*Value_NullValue)(nil),
		(*Value_BoolValue)(nil),
		(*Value_IntValue)(nil),
		(*Value_FloatValue)(nil),
		(*Value_StringValue)(nil),
		(*Value_BytesValue)(nil),
		(*Value_ArrayValue)(nil),
		(*Value_ObjectValue)(nil),
	}
	file_proto_operrouter_proto_msgTypes[26].OneofWrappers = []any{}
	file_proto_operrouter_proto_msgTypes[31].OneofWrappers = []any{}
	file_proto_operrouter_proto_msgTypes[33].OneofWrappers = []any{}
	file_proto_operrouter_proto_msgTypes[35].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_operrouter_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_operrouter_proto_goTypes,
		DependencyIndexes: file_proto_operrouter_proto_depIdxs,
		EnumInfos:         file_proto_operrouter_proto_enumTypes,
		MessageInfos:      file_proto_operrouter_proto_msgTypes,
	}.Build()
	File_proto_operrouter_proto = out.File
	file_proto_operrouter_proto_rawDesc = nil
	file_proto_operrouter_proto_goTypes = nil
	file_proto_operrouter_proto_depIdxs = nil
}
